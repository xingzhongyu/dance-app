# nginx/default.conf (最终解决方案 - 分离静态与动态代理)

server {
    listen 80;
    server_name omicsml.ai;
    # server_name sdu-112;
    client_max_body_size 1000M; 

    # 根路径重定向
    location = / {
        return 301 $scheme://$http_host/dance/;
    }

    # 处理 /dance 到 /dance/ 的重定向
    location = /dance {
        return 301 $scheme://$http_host/dance/;
    }

    # ===================================================================
    # 核心解决方案部分
    # ===================================================================

       # 1. 【新增的容错规则】捕获所有错误的、不带 /dance 前缀的 _next 请求
    #    这个规则专门用来修正客户端路由的错误行为。
    location /_next/ {
        # 关键: 使用 301 永久重定向，告诉浏览器正确的地址。
        # $request_uri 变量是完整的原始请求路径 (e.g., /_next/static/chunks/xxx.js)
        # 我们在它前面加上 /dance，就构成了正确的 URL。
        return 301 $scheme://$http_host/dance$request_uri;
    }


    # 1. 为 Next.js 静态资源创建专门的、高优先级的 location
    #    Nginx 会优先用这个规则匹配所有 /dance/_next/ 开头的请求。
    location /dance/_next/ {
        # 关键: proxy_pass 的 URL 带有路径且以斜杠结尾。
        # 它会将 location 匹配的部分 (/dance/_next/) 替换为 proxy_pass 的路径 (/_next/)。
        # 请求 /dance/_next/static/css/main.css 
        # -> 转发到 http://frontend:3000/_next/static/css/main.css
        # 这正是 Next.js 静态服务器期望的路径！
        proxy_pass http://frontend:3000/_next/;
      

        proxy_set_header Host $http_host; 
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 2. 为所有其他请求（主要是页面路由）创建通用 location
    #    这个规则会处理像 /dance/、/dance/atlas/ 这样的页面请求。
    location /dance/ {
        # 关键: proxy_pass 的 URL 没有路径，也没有结尾的斜杠。
        # 它会将完整的请求 URI (/dance/atlas/) 转发给 Next.js。
        # 这正是 Next.js 页面路由所需要的！
        proxy_pass http://frontend:3000/;
        
        proxy_set_header Host $http_host; 
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # ===================================================================

    # 后端 API 代理 (保持不变)
    location /api/ {
        rewrite ^/api/(.*)$ /$1 break;
        proxy_pass http://backend:8005;
        client_body_buffer_size 128M;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    location /mcp/ {
    proxy_pass http://backend:8005;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}