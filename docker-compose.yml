version: '3.8'

services:
  # 新增：Nginx 反向代理
  nginx:
    image: nginx:latest
    container_name: my_nginx_proxy
    ports:
      - "81:80"   # 监听公网 80 端口
      - "443:443" # 为以后添加 HTTPS 预留
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf # 挂载配置文件
    networks:
      - app-network
    depends_on:
      - frontend
      - backend

  redis:
    image: "redis:7-alpine"
    container_name: my_redis_container
    networks:
      - app-network

  demos:
    build: ./demos
    image: my-app/demos-base
    container_name: demos_container
    command: uvicorn demos.main:app --host 0.0.0.0 --port 8100
    ports:
      - "8100:8100"
    networks:
      - app-network

  backend:
    build: ./backend
    image: my-app/fastapi-backend-base
    container_name: fastapi_backend_container
    command: uvicorn main:app --host 0.0.0.0 --port 8005
    # ports: # <--- 移除端口暴露
    #   - "8005:8005"
    networks:
      - app-network
    depends_on:
      - redis
    environment:
      - DEMO_URL=http://sdu-112:8100
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./backend:/app
      - ./user_uploads:/uploads
      - ./db_data:/data  # <--- 修改/新增这一行


  worker:
    build: ./backend
    image: my-app/fastapi-backend-base
    container_name: celery_worker_container
    command: celery -A celery_worker.celery_app worker --loglevel=info
    networks:
      - app-network
    depends_on:
      - redis
    environment:
      - DEMO_URL=http://sdu-112:8100
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./backend:/app
      - ./user_uploads:/uploads
      - ./db_data:/data # <--- 同样需要这一行

  frontend:
    build:
      context: ./frontend
      args:
        - NODE_ENV=production
        # 修改这里：前端现在通过相对路径 /api/ 访问后端
        # Nginx 会处理这个路径的转发
        - NEXT_PUBLIC_BACKEND_URL=/api/
    container_name: nextjs_frontend_container
    # ports: # <--- 移除端口暴露
    #   - "81:3000"
    networks:
      - app-network
    depends_on:
      - backend

networks:
  app-network:
    driver: bridge